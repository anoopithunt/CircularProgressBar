struct CircularProgressBar: View {
    @State private var progress: Double = 0.0
    
    var progressColor: Color = .green
    var backgroundColor: Color = .gray.opacity(0.7)
    var lineWidth: CGFloat = 7
    var rotationDuration: Double = 2.0
    
    private var progressAngle: Double {
        min(progress, 1.0) * 360.0
    }
    
    private var rotationAngle: Angle {
        .degrees(progressAngle - 90)
    }
    
    var body: some View {
        ZStack {
            Circle()
                .stroke(backgroundColor, lineWidth: lineWidth)
            Circle()
                .trim(from: 0.0, to: CGFloat(progressAngle / 360.0))
                .stroke(progressColor, lineWidth: lineWidth)
                .rotationEffect(rotationAngle)
                .animation(Animation.linear(duration: rotationDuration).repeatForever(autoreverses: false), value: progressAngle)
                .onAppear {
                    withAnimation(.linear(duration: 1.5)) {
                        self.progress = 1.0
                    }
                }
                .onAnimationCompleted(for: progress) {
                    withAnimation(.linear(duration: 1.9)) {
                        self.progress = 0.2
                        self.progress = 1.0
                    }
                }
        }
    }
}
